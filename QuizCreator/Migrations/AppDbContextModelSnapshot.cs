// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuizCreator.Data;

#nullable disable

namespace QuizCreator.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("QuizCreator.Models.A", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("A");
                });

            modelBuilder.Entity("QuizCreator.Models.AKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AKeyBool")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("AKey");
                });

            modelBuilder.Entity("QuizCreator.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("QuizCreator.Models.EndResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("DisplayScore")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EndResult");
                });

            modelBuilder.Entity("QuizCreator.Models.EndResultsMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EndResultId")
                        .HasColumnType("int");

                    b.Property<string>("EndResultString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EndResultId");

                    b.ToTable("EndResultsMessage");
                });

            modelBuilder.Entity("QuizCreator.Models.EndResultsTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EndResultId")
                        .HasColumnType("int");

                    b.Property<string>("EndResultString")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EndResultId");

                    b.ToTable("EndResultsTitle");
                });

            modelBuilder.Entity("QuizCreator.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Q")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("QuizId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("QuizCreator.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("EndResultId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("EndResultId");

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("QuizCreator.Models.A", b =>
                {
                    b.HasOne("QuizCreator.Models.Question", null)
                        .WithMany("A")
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("QuizCreator.Models.AKey", b =>
                {
                    b.HasOne("QuizCreator.Models.Question", null)
                        .WithMany("AKey")
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("QuizCreator.Models.EndResultsMessage", b =>
                {
                    b.HasOne("QuizCreator.Models.EndResult", null)
                        .WithMany("EndMessages")
                        .HasForeignKey("EndResultId");
                });

            modelBuilder.Entity("QuizCreator.Models.EndResultsTitle", b =>
                {
                    b.HasOne("QuizCreator.Models.EndResult", null)
                        .WithMany("EndTitles")
                        .HasForeignKey("EndResultId");
                });

            modelBuilder.Entity("QuizCreator.Models.Question", b =>
                {
                    b.HasOne("QuizCreator.Models.Quiz", null)
                        .WithMany("Questions")
                        .HasForeignKey("QuizId");
                });

            modelBuilder.Entity("QuizCreator.Models.Quiz", b =>
                {
                    b.HasOne("QuizCreator.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuizCreator.Models.EndResult", "EndResult")
                        .WithMany()
                        .HasForeignKey("EndResultId");

                    b.Navigation("AppUser");

                    b.Navigation("EndResult");
                });

            modelBuilder.Entity("QuizCreator.Models.EndResult", b =>
                {
                    b.Navigation("EndMessages");

                    b.Navigation("EndTitles");
                });

            modelBuilder.Entity("QuizCreator.Models.Question", b =>
                {
                    b.Navigation("A");

                    b.Navigation("AKey");
                });

            modelBuilder.Entity("QuizCreator.Models.Quiz", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
